{"version":3,"file":"static/js/main.1129811e.js","mappings":"6LAgBKA,EAAAA,QAASC,KAAKC,QACjBF,EAAAA,QAASG,cAXY,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAOnB,QAAeV,EAAQ,Q,cC+BjBW,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,QAAS,IAEXC,MAAO,CACLC,MAAO,MACPF,QAAS,GACTG,aAAc,GACdC,kBAAmB,EACnBC,kBAAmB,UAIvB,QA7DmB,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACpBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,UAAG,YAClB,UACQtC,EAASuC,OAAOC,2BAA2BV,EAAOI,GAExDT,EAAWgB,SAAS,YACtB,CAAE,MAAOC,GACPC,QAAQD,MAAM,gBAAiBA,EACjC,CACF,IAAC,kBARgB,OAAAL,EAAAO,MAAA,KAAAC,UAAA,MAUC,eAAAC,GAAAR,EAAAA,EAAAA,UAAG,YACnB,UACQtC,EAASuC,OAAOQ,+BAA+BjB,EAAOI,GAE5DT,EAAWgB,SAAS,YACtB,CAAE,MAAOC,GACPC,QAAQD,MAAM,iBAAkBA,EAClC,CACF,GARkB,IAUlB,OACEM,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOvC,EAAOG,UAAUqC,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,QAAS,CACRH,MAAOvC,EAAOQ,MACdmC,YAAY,QACZC,aAAc,SAACC,GAAI,OAAKzB,EAASyB,EAAK,EACtCC,MAAO3B,KAETsB,EAAAA,EAAAA,KAACC,EAAAA,QAAS,CACRH,MAAOvC,EAAOQ,MACdmC,YAAY,WACZC,aAAc,SAACC,GAAI,OAAKrB,EAAYqB,EAAK,EACzCC,MAAOvB,EACPwB,iBAAe,KAEjBN,EAAAA,EAAAA,KAACO,EAAAA,QAAM,CAACC,MAAM,QAAQC,QAASzB,MAIrC,E,unBC3CA,IAwIMzB,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTI,QAAS,IAEX4C,WAAY,CACVC,SAAU,GACVC,WAAY,OACZ3C,aAAc,GACd4C,UAAW,UAEbC,UAAW,CACTH,SAAU,GACVC,WAAY,OACZC,UAAW,SACX5C,aAAc,IAEhB8C,kBAAmB,CACjB9C,aAAc,IAEhB+C,aAAc,CACZL,SAAU,GACV1C,aAAc,GACd2C,WAAY,QAEdK,iBAAkB,CAChBC,cAAe,MACfC,SAAU,QAEZC,aAAc,CACZC,gBAAiB,UACjBC,gBAAiB,GACjBC,kBAAmB,GACnBC,aAAc,EACdC,OAAQ,GAEVC,WAAY,CACVf,SAAU,IAEZgB,aAAc,CACZN,gBAAiB,OACjBvD,QAAS,GACT0D,aAAc,EACdI,UAAW,GACX/D,WAAY,UAEdgE,iBAAkB,CAChBC,MAAO,QACPlB,WAAY,OACZD,SAAU,IAEZoB,gBAAiB,CACfC,YAAa,EACbC,YAAa,OACbnE,QAAS,GACT0D,aAAc,GAEhBU,eAAgB,CACdb,gBAAiB,aAEnBc,eAAgB,CACdd,gBAAiB,OACjBe,QAAS,IAEXC,iBAAkB,CAChBxB,UAAW,SACXiB,MAAO,MACPlB,WAAY,OACZgB,UAAW,IAEbU,eAAgB,CACdzB,UAAW,SACXiB,MAAO,MACPlB,WAAY,OACZgB,UAAW,MAIf,QArNuB,SAAHxD,GAAwB,IAAlBC,EAAUD,EAAVC,WACxBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAvCiE,EAAS/D,EAAA,GAAEgE,EAAYhE,EAAA,GAC9BI,GAA8CL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,SAAAG,EAAA,GAAnD6D,EAAe5D,EAAA,GAAE6D,EAAkB7D,EAAA,GAC1C8D,GAAkCpE,EAAAA,EAAAA,UAAS,IAAGqE,GAAAnE,EAAAA,EAAAA,SAAAkE,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BxE,EAAAA,EAAAA,UAAS,KAAIyE,GAAAvE,EAAAA,EAAAA,SAAAsE,EAAA,GAAhCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwC5E,EAAAA,EAAAA,WAAS,GAAM6E,GAAA3E,EAAAA,EAAAA,SAAA0E,EAAA,GAAhDE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAoChF,EAAAA,EAAAA,WAAS,GAAMiF,GAAA/E,EAAAA,EAAAA,SAAA8E,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAEhCG,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAc,eAAA3E,GAAAC,EAAAA,EAAAA,UAAG,YACrB,IAAM2E,EAAejH,EAASkH,YAAYC,WAAW,aAC/CC,QAAiBH,EAAaI,MAC9BC,EAAmB,GACzBF,EAASG,SAAQ,SAACC,GAChBF,EAAiBG,KAAIC,EAAC,CAAEC,GAAIH,EAAIG,IAAOH,EAAII,QAC7C,IACAhC,EAAa0B,GAGb,IAAMO,EAAO7H,EAASuC,OAAOuF,YACzBD,IACF3B,EAAa2B,EAAK/F,OAClBiG,EAAcF,EAAK/F,OAEvB,IAAC,kBAfmB,OAAAO,EAAAO,MAAA,KAAAC,UAAA,KAgBpBmE,IAGA,IAAMgB,EAAWC,aAAY,WAC3B3B,GAAS,SAAC4B,GAAS,OAAKA,EAAY,CAAC,GACvC,GAAG,KAEH,OAAO,kBAAMC,cAAcH,EAAU,CACvC,GAAG,KAEHjB,EAAAA,EAAAA,YAAU,WAEJV,GAAS,IACXK,GAAgB,GAChBI,GAAc,GACdsB,EAAgBnC,GAEpB,GAAG,CAACI,IAEJ,IAAM0B,EAAa,eAAAjF,GAAAR,EAAAA,EAAAA,UAAG,UAAOR,GAE3B,IAAMuG,QAAgBrI,EAASkH,YAAYC,WAAW,gBAAgBK,IAAI1F,GAAOuF,MAC7EgB,EAAQC,SACOD,EAAQT,OACZf,YACXC,GAAc,GAGpB,IAAC,gBATkByB,GAAA,OAAAzF,EAAAF,MAAA,KAAAC,UAAA,KAWbuF,EAAe,eAAAI,GAAAlG,EAAAA,EAAAA,UAAG,UAAOR,SAEvB9B,EAASkH,YAAYC,WAAW,gBAAgBK,IAAI1F,GAAO2G,IAAI,CAAE5B,YAAY,GAAQ,CAAE6B,OAAO,GACtG,IAAC,gBAHoBC,GAAA,OAAAH,EAAA5F,MAAA,KAAAC,UAAA,KAcf+F,EAAgB,eAAAC,GAAAvG,EAAAA,EAAAA,UAAG,YACvB,IAAMwG,EAAsBnD,EAAUoD,QAAO,SAACC,GAAQ,OAAMnD,EAAgBmD,EAASrB,GAAG,IAExF,GAAIlB,GAAgBqC,EAAoB5I,OAAS,EAE/C+I,MAAM,2DAEN,IAEE,IAAMC,EAAiBlJ,EAASkH,YAAYC,WAAW,gBAAgBK,IAAIvB,SACrEiD,EAAeT,IAAI5C,GACzBiB,GAAc,GACdsB,EAAgBnC,GAEhBxE,EAAWgB,SAAS,gBACtB,CAAE,MAAOC,GACPC,QAAQD,MAAM,wBAAyBA,EACzC,CAEJ,IAAC,kBAnBqB,OAAAmG,EAAAjG,MAAA,KAAAC,UAAA,KA2BtB,OACEO,EAAAA,EAAAA,KAAC+F,EAAAA,QAAU,CAACC,sBAAuBzI,EAAOG,UAAUqC,SACjD0D,GACCzD,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAACnG,MAAOvC,EAAO+E,eAAevC,SAAC,0EAClCsD,GACFrD,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAACnG,MAAOvC,EAAO8E,iBAAiBtC,SAAC,uCAEtCH,EAAAA,EAAAA,MAAAsG,EAAAA,SAAA,CAAAnG,SAAA,EACEC,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAACnG,MAAOvC,EAAOmD,WAAWX,SAAC,iCAChCH,EAAAA,EAAAA,MAACqG,EAAAA,QAAI,CAACnG,MAAOvC,EAAOuD,UAAUf,SAAA,CAAC,mBAfpB,SAACoG,GAClB,IACMC,EAAUD,EAAgB,GAChC,MAAQ,GAFQE,KAAKC,MAAMH,EAAgB,IAEzBI,WAAWC,SAAS,EAAG,QAAQJ,EAAQG,WAAWC,SAAS,EAAG,MAClF,CAWwDC,CAAWxD,MAC1DV,EAAUmE,KAAI,SAACd,EAAUe,GAAK,OAC7B/G,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAAmBC,MAAO,CAACvC,EAAOwD,kBAAmB4F,EAAQ,IAAM,EAAIpJ,EAAOwE,gBAAkB,MAAMhC,SAAA,EACzGC,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAACnG,MAAOvC,EAAOyD,aAAajB,SAAE6F,EAASA,YAC5C5F,EAAAA,EAAAA,KAACH,EAAAA,QAAI,CAACC,MAAOvC,EAAO0D,iBAAiBlB,SAClC6F,EAASgB,QAAQF,KAAI,SAACG,EAAQC,GAAW,OACxC9G,EAAAA,EAAAA,KAAC+G,EAAAA,QAAgB,CAEfjH,MAAO,CACLvC,EAAO6D,aACPqB,EAAgBmD,EAASrB,MAAQsC,EAAStJ,EAAO2E,eAAiB,MAEpEzB,QAAS,kBAzDG,SAACuG,EAAYH,GAEpCxD,EAGHwC,MAAM,qCAFNnD,EAAkB4B,EAAAA,EAAC,CAAC,EAAI7B,GAAe,IAAAwE,EAAAA,EAAAA,SAAA,GAAGD,EAAaH,IAI3D,CAkDiCK,CAAsBtB,EAASrB,GAAIsC,EAAO,EACzDM,SAAU9D,EAAatD,UAEvBC,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAACnG,MAAOvC,EAAOmE,WAAW3B,SAAE8G,KAR5BC,EASY,QAddlB,EAASrB,GAiBb,KAETvE,EAAAA,EAAAA,KAAC+G,EAAAA,QAAgB,CAACjH,MAAOvC,EAAOoE,aAAclB,QAAS+E,EAAkB2B,SAAU9D,EAAatD,UAC9FC,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAACnG,MAAOvC,EAAOsE,iBAAiB9B,SAAC,sBAMlD,ECtIA,IAgBMxC,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,WAAY,YAIhB,QAxB4B,SAAHO,GAAwB,IAAlBC,EAAUD,EAAVC,WAO7B,OACEuB,EAAAA,EAAAA,MAACC,EAAAA,QAAI,CAACC,MAAOvC,EAAOG,UAAUqC,SAAA,EAC5BC,EAAAA,EAAAA,KAACiG,EAAAA,QAAI,CAAAlG,SAAC,yBAENC,EAAAA,EAAAA,KAACO,EAAAA,QAAM,CAACC,MAAM,SAASC,QAVN,WACnB7D,EAASuC,OAAOiI,UAEhB/I,EAAWgB,SAAS,OACtB,MASF,ECXA,IAAMgI,GAAQC,EAAAA,EAAAA,WAmBd,QAjBY,WACV,OACEtH,EAAAA,EAAAA,KAACuH,EAAAA,QAAmB,CAAAxH,UAClBH,EAAAA,EAAAA,MAACyH,EAAMG,UAAS,CAAAzH,SAAA,EAEdC,EAAAA,EAAAA,KAACqH,EAAMI,OAAM,CAACC,KAAK,OAAOC,UAAWC,EAAYhB,QAAS,CAAEpG,MAAO,mBAGnER,EAAAA,EAAAA,KAACqH,EAAMI,OAAM,CAACC,KAAK,YAAYC,UAAWE,EAAgBjB,QAAS,CAAEpG,MAAO,uBAG5ER,EAAAA,EAAAA,KAACqH,EAAMI,OAAM,CAACC,KAAK,gBAAgBC,UAAWG,EAAqBlB,QAAS,CAAEpG,MAAO,wBAI7F,C,GCzBIuH,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CAGAJ,EAAoBQ,EAAIF,E,MCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIR,EAAS3L,OAAQmM,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYL,EAASQ,GACpCC,GAAY,EACPC,EAAI,EAAGA,EAAIP,EAAS9L,OAAQqM,MACpB,EAAXL,GAAsBC,GAAgBD,IAAaM,OAAOC,KAAKrB,EAAoBU,GAAGY,OAAOC,GAASvB,EAAoBU,EAAEa,GAAKX,EAASO,MAC9IP,EAASY,OAAOL,IAAK,IAErBD,GAAY,EACTJ,EAAWC,IAAcA,EAAeD,IAG7C,GAAGI,EAAW,CACbT,EAASe,OAAOP,IAAK,GACrB,IAAIQ,EAAIZ,SACEV,IAANsB,IAAiBd,EAASc,EAC/B,CACD,CACA,OAAOd,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIR,EAAS3L,OAAQmM,EAAI,GAAKR,EAASQ,EAAI,GAAG,GAAKH,EAAUG,IAAKR,EAASQ,GAAKR,EAASQ,EAAI,GACrGR,EAASQ,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,C,KCzBdd,EAAoB0B,EAAKrB,IACxB,IAAIsB,EAAStB,GAAUA,EAAOuB,WAC7B,IAAOvB,EAAiB,QACxB,IAAM,EAEP,OADAL,EAAoB6B,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLd3B,EAAoB6B,EAAI,CAACzB,EAAS2B,KACjC,IAAI,IAAIR,KAAOQ,EACX/B,EAAoBgC,EAAED,EAAYR,KAASvB,EAAoBgC,EAAE5B,EAASmB,IAC5EH,OAAOa,eAAe7B,EAASmB,EAAK,CAAEW,YAAY,EAAMjG,IAAK8F,EAAWR,IAE1E,ECNDvB,EAAoBmC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBxC,EAAoBgC,EAAI,CAACS,EAAKC,IAAUtB,OAAOuB,UAAUC,eAAerC,KAAKkC,EAAKC,GCClF1C,EAAoByB,EAAKrB,IACH,qBAAXyC,QAA0BA,OAAOC,aAC1C1B,OAAOa,eAAe7B,EAASyC,OAAOC,YAAa,CAAEzK,MAAO,WAE7D+I,OAAOa,eAAe7B,EAAS,aAAc,CAAE/H,OAAO,GAAO,E,MCA9D,IAAI0K,EAAkB,CACrB,IAAK,GAaN/C,EAAoBU,EAAES,EAAK6B,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4B1G,KACvD,IAGIyD,EAAU+C,GAHTpC,EAAUuC,EAAaC,GAAW5G,EAGhByE,EAAI,EAC3B,GAAGL,EAASyC,MAAM9G,GAAgC,IAAxBwG,EAAgBxG,KAAa,CACtD,IAAI0D,KAAYkD,EACZnD,EAAoBgC,EAAEmB,EAAalD,KACrCD,EAAoBQ,EAAEP,GAAYkD,EAAYlD,IAGhD,GAAGmD,EAAS,IAAIzC,EAASyC,EAAQpD,EAClC,CAEA,IADGkD,GAA4BA,EAA2B1G,GACrDyE,EAAIL,EAAS9L,OAAQmM,IACzB+B,EAAUpC,EAASK,GAChBjB,EAAoBgC,EAAEe,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOhD,EAAoBU,EAAEC,EAAO,EAGjC2C,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBnH,QAAQ8G,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBjH,KAAO4G,EAAqBO,KAAK,KAAMF,EAAmBjH,KAAKmH,KAAKF,G,KC7CvF,IAAIG,EAAsBzD,EAAoBU,OAAEP,EAAW,CAAC,MAAM,IAAOH,EAAoB,QAC7FyD,EAAsBzD,EAAoBU,EAAE+C,E","sources":["firebaseConfig.js","AuthScreen.js","QuestionScreen.js","CompletedTestScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import firebase from 'firebase/compat/app'; // Update the import statement\n\nimport 'firebase/compat/auth'; // Import the necessary Firebase modules\nimport 'firebase/compat/firestore';\n\n// Your Firebase config\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAyL_zbGF6WPIWJMg6BXS7yYaw9wBVGATQ\",\n    authDomain: \"netpiraters.firebaseapp.com\",\n    projectId: \"netpiraters\",\n    storageBucket: \"netpiraters.appspot.com\",\n    messagingSenderId: \"33126733154\",\n    appId: \"1:33126733154:web:2f3c32b5bf86fab43fc83b\",\n    measurementId: \"G-DK75ZJ23MX\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nexport default firebase;\n","// AuthScreen.js\n\nimport React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet } from 'react-native';\nimport firebase from './firebaseConfig'; // Import your Firebase config\n\nconst AuthScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleLogin = async () => {\n    try {\n      await firebase.auth().signInWithEmailAndPassword(email, password);\n      // Navigate to the question screen upon successful login\n      navigation.navigate('Questions');\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n\n  const handleSignup = async () => {\n    try {\n      await firebase.auth().createUserWithEmailAndPassword(email, password);\n      // Navigate to the question screen upon successful signup\n      navigation.navigate('Questions');\n    } catch (error) {\n      console.error('Signup failed:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        onChangeText={(text) => setEmail(text)}\n        value={email}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n        secureTextEntry\n      />\n      <Button title=\"Login\" onPress={handleLogin} />\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    marginBottom: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'gray',\n  },\n});\n\nexport default AuthScreen;\n","// QuestionScreen.js\n\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\nimport firebase from './firebaseConfig'; // Import your Firebase config\n\nconst QuestionScreen = ({ navigation }) => {\n  const [questions, setQuestions] = useState([]);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [userEmail, setUserEmail] = useState(''); // Get the user email from Firebase auth\n  const [timer, setTimer] = useState(600); // 10 minutes in seconds\n  const [timerExpired, setTimerExpired] = useState(false);\n  const [testLocked, setTestLocked] = useState(false); // State to lock the test\n\n  useEffect(() => {\n    // Fetch questions from Firestore on component mount\n    const fetchQuestions = async () => {\n      const questionsRef = firebase.firestore().collection('questions');\n      const snapshot = await questionsRef.get();\n      const fetchedQuestions = [];\n      snapshot.forEach((doc) => {\n        fetchedQuestions.push({ id: doc.id, ...doc.data() });\n      });\n      setQuestions(fetchedQuestions);\n\n      // Get the user's email from Firebase auth\n      const user = firebase.auth().currentUser;\n      if (user) {\n        setUserEmail(user.email);\n        checkTestLock(user.email);\n      }\n    };\n    fetchQuestions();\n\n    // Start the timer on component mount\n    const interval = setInterval(() => {\n      setTimer((prevTimer) => prevTimer - 1);\n    }, 1000);\n\n    return () => clearInterval(interval); // Clear interval on unmount\n  }, []);\n\n  useEffect(() => {\n    // Check if the timer has expired\n    if (timer <= 0) {\n      setTimerExpired(true);\n      setTestLocked(true); // Lock the test on timer expiration\n      lockTestForUser(userEmail); // Update test lock status in Firebase\n    }\n  }, [timer]);\n\n  const checkTestLock = async (email) => {\n    // Check if the test is locked for this user in Firebase\n    const userDoc = await firebase.firestore().collection('user_answers').doc(email).get();\n    if (userDoc.exists) {\n      const userData = userDoc.data();\n      if (userData.testLocked) {\n        setTestLocked(true);\n      }\n    }\n  };\n\n  const lockTestForUser = async (email) => {\n    // Update test lock status for this user in Firebase\n    await firebase.firestore().collection('user_answers').doc(email).set({ testLocked: true }, { merge: true });\n  };\n\n  const handleAnswerSelection = (questionId, option) => {\n    // Check if the timer has expired before allowing selection\n    if (!timerExpired) {\n      setSelectedAnswers({ ...selectedAnswers, [questionId]: option });\n    } else {\n      alert('Time is up! Test session expired.');\n    }\n  };\n\n  const handleFinishTest = async () => {\n    const unansweredQuestions = questions.filter((question) => !selectedAnswers[question.id]);\n\n    if (timerExpired || unansweredQuestions.length > 0) {\n      // Show a warning if the timer has expired or there are unanswered questions\n      alert('Please answer all questions within the time limit!');\n    } else {\n      try {\n        // Save user answers to Firestore\n        const userAnswersRef = firebase.firestore().collection('user_answers').doc(userEmail);\n        await userAnswersRef.set(selectedAnswers);\n        setTestLocked(true); // Lock the test once completed\n        lockTestForUser(userEmail); // Update test lock status in Firebase\n        // Navigate to the completed test screen\n        navigation.navigate('CompletedTest');\n      } catch (error) {\n        console.error('Error saving answers:', error);\n      }\n    }\n  };\n\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      {testLocked ? (\n        <Text style={styles.testLockedText}>Test session locked. You have completed the test or the time expired.</Text>\n      ) : timerExpired ? (\n        <Text style={styles.timerExpiredText}>Time is up! Test session expired.</Text>\n      ) : (\n        <>\n          <Text style={styles.headerText}>Select the correct options:</Text>\n          <Text style={styles.timerText}>Time Remaining: {formatTime(timer)}</Text>\n          {questions.map((question, index) => (\n            <View key={question.id} style={[styles.questionContainer, index % 2 === 0 ? styles.borderContainer : null]}>\n              <Text style={styles.questionText}>{question.question}</Text>\n              <View style={styles.optionsContainer}>\n                {question.options.map((option, optionIndex) => (\n                  <TouchableOpacity\n                    key={optionIndex}\n                    style={[\n                      styles.optionButton,\n                      selectedAnswers[question.id] === option ? styles.selectedOption : null,\n                    ]}\n                    onPress={() => handleAnswerSelection(question.id, option)}\n                    disabled={timerExpired}\n                  >\n                    <Text style={styles.optionText}>{option}</Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </View>\n          ))}\n          <TouchableOpacity style={styles.finishButton} onPress={handleFinishTest} disabled={timerExpired}>\n            <Text style={styles.finishButtonText}>Finish Test</Text>\n          </TouchableOpacity>\n        </>\n      )}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  timerText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  questionContainer: {\n    marginBottom: 20,\n  },\n  questionText: {\n    fontSize: 16,\n    marginBottom: 10,\n    fontWeight: 'bold',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  optionButton: {\n    backgroundColor: '#f0f0f0',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 5,\n    margin: 5,\n  },\n  optionText: {\n    fontSize: 14,\n  },\n  finishButton: {\n    backgroundColor: 'blue',\n    padding: 15,\n    borderRadius: 8,\n    marginTop: 20,\n    alignItems: 'center',\n  },\n  finishButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  borderContainer: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    padding: 10,\n    borderRadius: 8,\n  },\n  selectedOption: {\n    backgroundColor: 'lightblue',\n  },\n  disabledOption: {\n    backgroundColor: '#ddd',\n    opacity: 0.7,\n  },\n  timerExpiredText: {\n    textAlign: 'center',\n    color: 'red',\n    fontWeight: 'bold',\n    marginTop: 10,\n  },\n  testLockedText: {\n    textAlign: 'center',\n    color: 'red',\n    fontWeight: 'bold',\n    marginTop: 10,\n  },\n});\n\nexport default QuestionScreen;\n","// CompletedTestScreen.js\n\nimport React from 'react';\nimport { View, Text, Button, StyleSheet } from 'react-native';\nimport firebase from './firebaseConfig'; // Import your Firebase config\n\nconst CompletedTestScreen = ({ navigation }) => {\n  const handleLogout = () => {\n    firebase.auth().signOut();\n    // Navigate back to the login/signup screen upon logout\n    navigation.navigate('Auth');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text>Your Completed Test</Text>\n      {/* Display completed test details here */}\n      <Button title=\"Logout\" onPress={handleLogout} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default CompletedTestScreen;\n","// App.js\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport AuthScreen from './AuthScreen'; // Import your authentication screen\nimport QuestionScreen from './QuestionScreen'; // Import your screen for answering questions\nimport CompletedTestScreen from './CompletedTestScreen'; // Import your screen for viewing completed test\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {/* Screen for user authentication */}\n        <Stack.Screen name=\"Auth\" component={AuthScreen} options={{ title: 'Login/Signup' }} />\n\n        {/* Screen for selecting and answering questions */}\n        <Stack.Screen name=\"Questions\" component={QuestionScreen} options={{ title: 'Answer Questions' }} />\n\n        {/* Screen for viewing completed test */}\n        <Stack.Screen name=\"CompletedTest\" component={CompletedTestScreen} options={{ title: 'Completed Test' }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [989], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","styles","StyleSheet","create","container","flex","justifyContent","alignItems","padding","input","width","marginBottom","borderBottomWidth","borderBottomColor","_ref","navigation","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","_ref2","_asyncToGenerator","auth","signInWithEmailAndPassword","navigate","error","console","apply","arguments","_ref3","createUserWithEmailAndPassword","_jsxs","View","style","children","_jsx","TextInput","placeholder","onChangeText","text","value","secureTextEntry","Button","title","onPress","headerText","fontSize","fontWeight","textAlign","timerText","questionContainer","questionText","optionsContainer","flexDirection","flexWrap","optionButton","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","margin","optionText","finishButton","marginTop","finishButtonText","color","borderContainer","borderWidth","borderColor","selectedOption","disabledOption","opacity","timerExpiredText","testLockedText","questions","setQuestions","selectedAnswers","setSelectedAnswers","_useState5","_useState6","userEmail","setUserEmail","_useState7","_useState8","timer","setTimer","_useState9","_useState10","timerExpired","setTimerExpired","_useState11","_useState12","testLocked","setTestLocked","useEffect","fetchQuestions","questionsRef","firestore","collection","snapshot","get","fetchedQuestions","forEach","doc","push","_objectSpread","id","data","user","currentUser","checkTestLock","interval","setInterval","prevTimer","clearInterval","lockTestForUser","userDoc","exists","_x","_ref4","set","merge","_x2","handleFinishTest","_ref5","unansweredQuestions","filter","question","alert","userAnswersRef","ScrollView","contentContainerStyle","Text","_Fragment","timeInSeconds","seconds","Math","floor","toString","padStart","formatTime","map","index","options","option","optionIndex","TouchableOpacity","questionId","_defineProperty","handleAnswerSelection","disabled","signOut","Stack","createNativeStackNavigator","NavigationContainer","Navigator","Screen","name","component","AuthScreen","QuestionScreen","CompletedTestScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}